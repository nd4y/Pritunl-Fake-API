networks:
  pritunl-network:
    driver: bridge
    external: false

services:
  nginx:
    container_name: pritunl-fakeapi-nginx
    build:
        context: ./build
        dockerfile: nginx.dockerfile
        args:
            BASE_IMAGE: ${NGINX_IMAGE_TAG}
    restart: always
    privileged: false
    environment: []
    volumes: []
    secrets: []
    networks:
      pritunl-network:
        aliases:       
          - app.pritunl.com
          - auth.pritunl.com
    ports: []
    depends_on: 
      fpm:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    links:
    - fpm

  fpm:
    container_name: pritunl-fakeapi-fpm
    build:
        context: ./build
        dockerfile: fpm.dockerfile
        args:
            BASE_IMAGE: ${FPM_IMAGE_TAG}
    restart: always
    privileged: false
    environment: []
    volumes: []
    secrets: []
    networks:
      pritunl-network:
    ports: []
    depends_on: []
    healthcheck:
          test: ["CMD-SHELL", "timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/9000' || exit 1"]
          interval: 10s
          timeout: 5s
          retries: 3
          start_period: 1s

  pritunl:
    container_name: pritunl-server
    build:
        context: ./build
        dockerfile: pritunl.dockerfile
        args:
            BASE_IMAGE: ${PRITUNL_IMAGE_TAG}
    privileged: true
    restart: always
    environment: []
    volumes:
      - ${PWD}/mounts/pritunl/mongodb:/var/lib/mongodb
      - ${PWD}/mounts/pritunl/config/pritunl:/var/lib/pritunl
    secrets: []

    networks:
      pritunl-network:
    ports:
      - '80:80' # WebUI
      - '443:443' # WebUI
      - '62001-62099:62001-62999/udp' # ovpn
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "-L", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s